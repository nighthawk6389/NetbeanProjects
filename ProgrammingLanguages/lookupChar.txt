            case '=':
                addChar();
                nextToken=ASSIGN_OP;
                break;
            case '+':
                addChar();
                nextToken=ADD_OP;
                break;
            case '-':
                addChar();
                nextToken=SUB_OP;
                break;
            case '*':
                addChar();
                nextToken=MULT_OP;
                break;
            case '/':
                addChar();
                nextToken=DIV_OP;
                break;
            case '(':
                addChar();
                nextToken=LEFT_PAREN;
                break;
            case ')':
                addChar();
                nextToken=RIGHT_PAREN;
                break;
            case '}':
                addChar();
                nextToken=RIGHT_BRACK;
                break;
            case '{':
                addChar();
                nextToken=LEFT_BRACK;
                break;
            case ',':
                addChar();
                nextToken=COMMA;
                break;
            case ';':
                addChar();
                nextToken=SEMICOLON;
                break;
            case '|':
                addChar();
                nextToken=SINGLEOR;
                break;
            case '&':
                addChar();
                nextToken=SINGLEAND;
                break;
            case '<':
                addChar();
                nextToken=LESSTHAN;
                break;
            case '>':
                addChar();
                nextToken=GREATERTHAN;
                break;
            case '%':
                addChar();
                nextToken=REMAINDER;
                break;
            case '!':
                addChar();
                nextToken=UNARYNOT;
                break;
            case '~':
                addChar();
                nextToken=BITNOT;
                break;
            default:
               System.out.println("LookupChar not found. Char was "+ch+" -- EOF");
               addChar();
               nextToken=EOF;
               break;



    private int lookupString(){
        String s="";
        for(int i=0;i<lexLen;i++){
            s=s+lexeme[i];
        }//end for

        if(s.equals("||")){
            nextToken=DOUBLEOR;
        }
        else if(s.equals("&&")){
            nextToken=DOUBLEAND;
        }
        else if(s.equals("!=")){
            nextToken=NOTEQUAL;
        }
        else if(s.equals("==")){
            nextToken=BOOLEQUAL;
        }
        else if(s.equals("<=")){
            nextToken=LESSTHANEQ;
        }
        else if(s.equals(">=")){
            nextToken=GREATERTHANEQ;
        }
        else{
            System.out.println("LookupString not found. String was "+s+" -- EOF");
            nextToken=EOF;
        }
        return nextToken;
    }//end lookupString



    private void lookupChar(){
        
        char ch=lexeme[0];

        switch(ch){

            case '=':
                nextToken=ASSIGN_OP;
                break;
            case '+':
                nextToken=ADD_OP;//(int)('+');
                break;
            case '-':
                nextToken=SUB_OP;
                break;
            case '*':
                nextToken=MULT_OP;
                break;
            case '/':
                nextToken=DIV_OP;
                break;
            case '(':
                nextToken=LEFT_PAREN;
                break;
            case ')':
                nextToken=RIGHT_PAREN;
                break;
            case '}':
                nextToken=RIGHT_BRACK;
                break;
            case '{':
                nextToken=LEFT_BRACK;
                break;
            case ',':
                nextToken=COMMA;
                break;
            case ';':
                nextToken=SEMICOLON;
                break;
            case '|':
                nextToken=SINGLEOR;
                break;
            case '&':
                nextToken=SINGLEAND;
                break;
            case '<':
                nextToken=LESSTHAN;
                break;
            case '>':
                nextToken=GREATERTHAN;
                break;
            case '%':
                nextToken=REMAINDER;
                break;
            case '!':
                nextToken=UNARYNOT;
                break;
            case '~':
                nextToken=BITNOT;
                break;
            case '\'':
                nextToken=SINGLEQUOTE;
                break;
            default:
               System.out.println("LookupChar not found. Char was "+ch+" -- EOF");
               nextToken=EOF;
               break;

        }//end switch

    }//end lookup
